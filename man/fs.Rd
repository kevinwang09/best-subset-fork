% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fs.R
\name{fs}
\alias{fs}
\title{Forward stepwise regression.}
\usage{
fs(x, y, maxsteps = min(nrow(x) - intercept, ncol(x), 2000),
  intercept = TRUE, normalize = TRUE, verbose = FALSE)
}
\arguments{
\item{x}{Matrix of predictors, of dimension (say) n x p.}

\item{y}{Vector of responses, of length (say) n.}

\item{maxsteps}{Maximum number of steps of the forward stepwise path to
compute. Default is min(n-1,p,2000) for models with intercept and
min(n,p,2000) for models without it}

\item{intercept, normalize}{Should an intercept be included in the regression
model? Should the predictors be normalized before computing the path?
Default is TRUE for both.}

\item{verbose}{Should intermediate progress be printed out? Default is FALSE.}
}
\value{
A list with the following components:
  \itemize{
  \item action: vector giving the index of the variable added at each step
  \item df: vector that gives the (naive) degrees of freedom of the model
  at each step, i.e., the number of active predictor variables (+ 1 if there
  is an intercept included)
  \item beta: matrix of regression coefficients for each step along the path,
    one column per step
  \item completepath: a boolean indicating whether the forward stepwise path
  was run to completion (as opposed to being stopped early because the max
  number of steps was achieved)
  \item bls: if the complete path was computed, this is a vector that gives
  the least squares coefficients of the full regression model
  \item x, y: the passed x and y
  \item bx, by: the means of the columns of x, and the mean of y
  \item intercept, normalize: the passed values for intercept and normalize
  }
}
\description{
Compute the forward stepwise regression path.
}
\details{
This function implements forward stepwise regression, adding the
  predictor at each step that maximizes the absolute correlation between the
  predictors---once orthogonalized with respect to the current model---and
  the residual. This entry criterion is standard, and is equivalent to
  choosing the variable that achieves the biggest drop in RSS at each step;
  it is used, e.g., by the \code{step} function in R. Note that, for example,
  the \code{lars} package implements a stepwise option (with type="step"),
  but uses a (mildly) different entry criterion, based on maximal absolute
  correlation between the original (non-orthogonalized) predictors and the
  residual.
}
\examples{
# Simulate some simple regression data with the first 5 coefficients
# being nonzero
set.seed(0)
n = 100
p = 20
xy.obj = sim.xy(n,p,nval=0,s=5,beta.type=2,snr=1)
x = xy.obj$x
y = xy.obj$y

# Run forward stepwise regression for 8 steps
fs.obj = fs(x,y,intercept=FALSE,maxsteps=8,verbose=TRUE)
fs.beta = coef(fs.obj)
fs.supp = apply(fs.beta != 0, 2, which)

# Solve best subset selection for 8 sparsity levels
bs.obj = bs(x,y,intercept=FALSE,k=0:8,verbose=TRUE)
bs.beta = coef(bs.obj)
bs.supp = apply(bs.beta != 0, 2, which)

# Compare supports of the solutions with 5 and 8 variables
fs.supp[[6]]; bs.supp[[6]]
fs.supp[[9]]; bs.supp[[9]]

# Predict on test data and record test error
ntest = 10000
xy.obj.test = sim.xy(ntest,p,nval=0,s=5,beta.type=2,snr=1)
xtest = xy.obj.test$x
ytest = xy.obj.test$y

fs.pred = predict(fs.obj,newx=xtest)
bs.pred = predict(bs.obj,newx=xtest)
colMeans((fs.pred - ytest)^2)
colMeans((bs.pred - ytest)^2)
}
\author{
Ryan Tibshirani
}

